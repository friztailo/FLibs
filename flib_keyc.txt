local key = class("key")

local keys = {}
local keys_values = {}

function key:initialize(...)
    self._keys = {}
    
    self._ispressed = false
    self._pressed = {}
    
    self._iscombination = false
    
    self.click = function(value) end
    
    self.pressed = function() end
    self.onPressed = function() end
    
    self.released = function() end
    self.onReleased = function() end
    
    self.loop = function(value) end
    
    if type(...) == "string" then self._keys = string.explode(" ", ...) elseif type(...) == "table" then self._keys = ... end
    
    for i, k in pairs(self._keys) do self._pressed[string.lower(k)] = false end
    
    if #self._keys > 1 then self._iscombination = true end
    
    keys[#keys] = self
end

function key:isCombination() return self._iscombination end
function key:isPressed() return self.ispressed end
function key:getPressed() return self._pressed end

hook.add("inputPressed", "flib_key", function(id)
    keys_values[string.lower(input.getKeyName(id))] = true
    for i, k in pairs(keys) do
        for a, b in pairs(k._keys) do
            if keys_values[string.lower(b)] then
                if a == #k._keys then
                    if !k._ispressed then
                        k.pressed()
                        k.click(true)
                        k._ispressed = true
                                 k._pressed[string.lower(b)] = true
                    end
                end
            else break end
        end
    end
end)

hook.add("inputReleased", "flib_key", function(id)
    keys_values[string.lower(input.getKeyName(id))] = false
    for i, k in pairs(keys) do
        for a, b in pairs(k._keys) do
               if !keys_values[string.lower(b)] then 
                      if a == #k._keys then 
                          if k._ispressed then 
                                 k.released() 
                                 k.click(false) 
                                 k._ispressed = false 
                                 k._pressed[string.lower(b)] = false
                          end 
                      end
               else
                      if k._ispressed then
                          k.released() 
                          k.click(false)
                          k._ispressed = false
                          k._pressed[string.lower(b)] = false
                      end
                      break
               end
           end
    end
end)

hook.add("Think", "__KeyCheck__", function() for i, k in pairs(keys) do k.loop(k._ispressed) end end)
return key
