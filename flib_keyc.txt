keyC = class("keyC")

local __all_keys__ = {}

local __keys__ = {}

function keyC:initialize(...)
    self.id = #__keys__ + 1
    
    if type(...) == "string" then
        self.__key_name__ = string.explode(" ", ...)
    elseif type(...) == "table" then
        self.__key_name__ = ...
    end
    
    self._pressed = false
    
    self.click = function(value) end
    
    self.pressed = function() end
    self.onPressed = function() end
    
    self.released = function() end
    self.onReleased = function() end
    
    self.loop = function(value) end
    
    __keys__[self.id] = self
end

function keyC:getValue() return self.__pressed__ end

hook.add("inputPressed", "__KeyCheck__", function(key)
    __all_keys__[string.lower(input.getKeyName(key))] = true
    for i, k in pairs(__keys__) do
        for a, b in pairs(k.__key_name__) do
            if __all_keys__[string.lower(b)] then 
                if a == #k.__key_name__ then 
                    if !k._pressed then 
                        k.pressed() 
                        k.click(true) 
                        k._pressed = true 
                    end 
                end
            else break end
        end
    end
end)

hook.add("inputReleased", "__KeyCheck__", function(key)
    __all_keys__[string.lower(input.getKeyName(key))] = false
    
    for i, k in pairs(__keys__) do
        for a, b in pairs(k.__key_name__) do
            if !__all_keys__[string.lower(b)] then 
                if a == #k.__key_name__ then 
                    if k._pressed then 
                        k.released() 
                        k.click(false) 
                        k._pressed = false 
                    end 
                end
            else
                if k._pressed then
                    k.released() 
                    k.click(false)
                    k._pressed = false
                end
                break 
            end
        end
    end
end)

hook.add("Think", "__KeyCheck__", function()
    for i, k in pairs(__keys__) do
        for a, b in pairs(k.__key_name__) do
            if __all_keys__[string.lower(b)] then 
                if a == #k.__key_name__ then k.loop(true) end 
            else k.loop(false) break end
        end
    end
end)

return keyC
